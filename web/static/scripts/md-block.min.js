let marked=window.marked,DOMPurify=window.DOMPurify,Prism=window.Prism;export const URLs={marked:"https://cdn.jsdelivr.net/npm/marked/src/marked.min.js",DOMPurify:"https://cdn.jsdelivr.net/npm/dompurify@2.3.3/dist/purify.es.min.js"};function deIndent(e){let t=e.match(/^[\r\n]*([\t ]+)/);return t&&(t=t[1],e=e.replace(RegExp("^"+t,"gm"),"")),e}export class MarkdownElement extends HTMLElement{constructor(){super(),this.renderer=Object.assign({},this.constructor.renderer);for(let e in this.renderer)this.renderer[e]=this.renderer[e].bind(this)}get rendered(){return this.getAttribute("rendered")}get mdContent(){return this._mdContent}set mdContent(e){this._mdContent=e,this._contentFromHTML=!1,this.render()}connectedCallback(){Object.defineProperty(this,"untrusted",{value:this.hasAttribute("untrusted"),enumerable:!0,configurable:!1,writable:!1}),this._mdContent===void 0&&(this._contentFromHTML=!0,this._mdContent=deIndent(this.innerHTML),this._mdContent=this._mdContent.replace(/&gt;/g,">")),this.render()}async render(){if(!this.isConnected||this._mdContent===void 0)return;marked||(marked=import(URLs.marked).then(e=>e.marked)),marked=await marked,marked.setOptions({gfm:!0,mangle:!!0,headerIds:!!0,langPrefix:"language-"}),marked.use({renderer:this.renderer});let e=this._parse();if(this.untrusted){let t=this._mdContent;if(e=await MarkdownElement.sanitize(e),this._mdContent!==t)return}if(this.innerHTML=e,!Prism&&URLs.Prism&&this.querySelector("code")&&(Prism=import(URLs.Prism),URLs.PrismCSS)){let e=document.createElement("link");e.rel="stylesheet",e.href=URLs.PrismCSS,document.head.appendChild(e)}Prism&&(await Prism,Prism.highlightAllUnder(this)),this.src?this.setAttribute("rendered",this._contentFromHTML?"fallback":"remote"):this.setAttribute("rendered",this._contentFromHTML?"content":"property");let t=new CustomEvent("md-render",{bubbles:!0,composed:!0});this.dispatchEvent(t)}static async sanitize(e){return DOMPurify||(DOMPurify=import(URLs.DOMPurify).then(e=>e.default)),DOMPurify=await DOMPurify,DOMPurify.sanitize(e)}}export class MarkdownSpan extends MarkdownElement{constructor(){super()}_parse(){return marked.parseInline(this._mdContent)}static renderer={codespan(e){return this._contentFromHTML?e=e.replace(/&amp;(?=[lg]t;)/g,"&"):e=e.replace(/</g,"&lt;"),`<code>${e}</code>`}}}export class MarkdownBlock extends MarkdownElement{constructor(){super()}get src(){return this._src}set src(e){this.setAttribute("src",e)}get hmin(){return this._hmin||1}set hmin(e){this.setAttribute("hmin",e)}get hlinks(){return this._hlinks??null}set hlinks(e){this.setAttribute("hlinks",e)}_parse(){return marked.parse(this._mdContent)}static renderer=Object.assign({heading(e,t,n,s){t=Math.min(6,t+(this.hmin-1));const a=s.slug(e),i=this.hlinks;let o;return i===null?o=e:(o=`<a href="#${a}" class="anchor">`,i===""?o+=e+"</a>":o+=i+"</a>"+e),`<h${t} id="${a}">${o}</h${t}>`},code(e,t){return this._contentFromHTML?e=e.replace(/&amp;(?=[lg]t;)/g,"&"):e=e.replace(/</g,"&lt;"),`<pre class="language-${t}"><code>${e}</code></pre>`}},MarkdownSpan.renderer);static get observedAttributes(){return["src","hmin","hlinks"]}attributeChangedCallback(e,t,n){if(t===n)return;switch(e){case"src":let e;try{e=new URL(n,location)}catch{return}let t=this.src;this._src=e,this.src!==t&&fetch(this.src).then(e=>{if(!e.ok)throw new Error(`Failed to fetch ${this.src}: ${e.status} ${e.statusText}`);return e.text()}).then(e=>{this.mdContent=e}).catch(e=>{});break;case"hmin":n>0&&(this._hmin=+n,this.render());break;case"hlinks":this._hlinks=n,this.render()}}}customElements.define("md-block",MarkdownBlock),customElements.define("md-span",MarkdownSpan)